{"version":3,"sources":["components/Navbar/Navbar.js","utils/API.js","components/Headers/Headers.js","components/Searchbar/Searchbar.js","components/Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","axios","get","Headers","props","scope","id","onClick","sortedResults","users","map","user","key","phone","src","picture","medium","alt","name","first","last","email","dob","age","Searchbar","onChange","filteredResults","value","search","type","placeholder","Results","state","default","filtered","searchResults","API","then","res","setState","data","results","catch","err","console","log","e","target","filter","toLowerCase","startsWith","replace","toString","sortUp","sort","a","b","sortDown","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ac0e9f25.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid bg-primary\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-white\">Employee Directory</h1>\r\n        <p className=\"lead text-white\">Search for an employee or sort by clicking on a column header</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import axios from \"axios\";\r\n\r\n// Making API call to get filler information for employees\r\nexport default {\r\n    search: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=20\")\r\n    }\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Headers(props) {\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    {/* Table headers that sort on click */}\r\n                    <th scope=\"col\"></th>\r\n                    <th scope=\"col\" className={props.className} id=\"name\" onClick={props.sortedResults}>Name</th>\r\n                    <th scope=\"col\" className={props.className} id=\"phone\" onClick={props.sortedResults}>Phone</th>\r\n                    <th scope=\"col\" className={props.className} id=\"email\" onClick={props.sortedResults}>Email</th>\r\n                    <th scope=\"col\" className={props.className} id=\"age\" onClick={props.sortedResults}>Age</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {/* For each result from axios call, populate a row with the following info */}\r\n                {props.users.map(user => (\r\n                    <tr key={user.phone}>\r\n                        <td><img src={user.picture.medium} alt=\"user profile\" /></td>\r\n                        <td>{user.name.first} {user.name.last}</td>\r\n                        <td>{user.phone}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.dob.age}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table >\r\n    )\r\n};\r\n\r\nexport default Headers;","import React from \"react\";\r\n\r\nfunction Searchbar(props) {\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input\r\n                    // Enabling the ability to filter as the user types\r\n                    onChange={props.filteredResults}\r\n                    value={props.search}\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    placeholder=\"Search by Name\"\r\n                />\r\n            </form>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport Headers from \"../Headers/Headers\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\n\r\nclass Results extends Component {\r\n    state = {\r\n        search: \"\",\r\n        default: [],\r\n        filtered: [],\r\n        filteredResults: [],\r\n        className: \"fa fa-fw fa-sort up\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchResults();\r\n    }\r\n\r\n    searchResults = () => {\r\n        API.search()\r\n            .then(res => this.setState({ default: res.data.results, filtered: res.data.results }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // If nothing is searched, use default state, which shows all results. Otherwise, filter results.\r\n    filteredResults = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        if (value === \"\") {\r\n            this.setState({ filtered: this.state.default })\r\n        } else if (value !== \"\") {\r\n            const filtered = this.state.default.filter(data => (`${data.name.first} ${data.name.last}`).toLowerCase().startsWith(value.toLowerCase()) || data.name.last.toLowerCase().startsWith(value.toLowerCase()) || data.phone.startsWith(value) || data.phone.replace(/[()-\\s]/g, \"\").startsWith(value) || data.email.toLowerCase().startsWith(value.toLowerCase()) || data.dob.age.toString().startsWith(value.toString()))\r\n            this.setState({ filtered });\r\n        }\r\n    }\r\n\r\n    className = (className) => {\r\n        if (className === \"fa fa-fw fa-sort up\") {\r\n            this.setState({ className: \"fa fa-fw fa-sort down\" })\r\n        } else if (className === \"fa fa-fw fa-sort down\") {\r\n            this.setState({ className: \"fa fa-fw fa-sort up\" })\r\n        }\r\n    }\r\n\r\n    // Sorting columns up and down by type\r\n    sortedResults = (e) => {\r\n        const { className, id } = e.target;\r\n\r\n        if (className === \"fa fa-fw fa-sort up\" && id === \"name\") {\r\n            const sortUp = this.state.filtered.sort((a, b) => (a.name.first > b.name.first) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortUp });\r\n\r\n        } else if (className === \"fa fa-fw fa-sort down\" && id === \"name\") {\r\n            const sortDown = this.state.filtered.sort((a, b) => (a.name.first < b.name.first) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortDown });\r\n\r\n        } else if (className === \"fa fa-fw fa-sort up\" && id === \"phone\") {\r\n            const sortDown = this.state.filtered.sort((a, b) => (a.phone.replace(/[()-\\s]/g, \"\") > b.phone.replace(/[()-\\s]/g, \"\")) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortDown });\r\n\r\n        } else if (className === \"fa fa-fw fa-sort down\" && id === \"phone\") {\r\n            const sortDown = this.state.filtered.sort((a, b) => (a.phone.replace(/[()-\\s]/g, \"\") < b.phone.replace(/[()-\\s]/g, \"\")) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortDown });\r\n\r\n        } else if (className === \"fa fa-fw fa-sort up\" && id === \"email\") {\r\n            const sortDown = this.state.filtered.sort((a, b) => (a.email.replace(/[@.-_]/g, \"\") > b.email.replace(/[@.-_]/g, \"\")) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortDown });\r\n\r\n        } else if (className === \"fa fa-fw fa-sort down\" && id === \"email\") {\r\n            const sortDown = this.state.filtered.sort((a, b) => (a.email.replace(/[@.-_]/g, \"\") < b.email.replace(/[@.-_]/g, \"\")) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortDown });\r\n\r\n        } else if (className === \"fa fa-fw fa-sort up\" && id === \"age\") {\r\n            const sortDown = this.state.filtered.sort((a, b) => (a.dob.age > b.dob.age) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortDown });\r\n\r\n        } else if (className === \"fa fa-fw fa-sort down\" && id === \"age\") {\r\n            const sortDown = this.state.filtered.sort((a, b) => (a.dob.age < b.dob.age) ? 1 : -1)\r\n            this.className(className)\r\n            this.setState({ filteredResults: sortDown });\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Searchbar\r\n                    search={this.state.search}\r\n                    filteredResults={this.filteredResults}\r\n                />\r\n                <Headers\r\n                    users={this.state.filtered}\r\n                    sortedResults={this.sortedResults}\r\n                    className={this.state.className}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Results from \"./components/Results/Results\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container\">\n        <Results />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}